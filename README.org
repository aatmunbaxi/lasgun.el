#+title: lasgun.el
#+subtitle: Avy-backed marking of multiple positions


[[file:demo.gif]]

=lasgun.el= (lays-gun) provides =avy=-backed, actionable placement of multiple inactive marks in the current buffer.
Once these marks have been collected, you can act on the marks in bulk, without disturbing your point (with some obvious exceptions).
If this sounds familiar to how =avy= works, it is!
=lasgun= simply generalizes the =Filter -> Select -> Act= from =avy= to one that works on multiple selected candidates.

* Why =lasgun.el=?
- Avy provides an excellent =Filter -> Select -> Act= loop. =lasgun.el= generalizes this to allow multiple runs of =Filter -> Select=, and =Acting= when all candidates are selected.
  - So using =lasgun.el= only makes sense when acting on multiple candidates in bulk

Admittedly, this package is extremely simple; the bulk of the package is all of two macros.
It does not come with a nice user interface, though a small example of one with [[https://github.com/cyruseuros/hercules][hercules]] is in [[file:hercules-lasgun-example.el][hercules-lasgun-example.el]] (with dependency on [[https://github.com/noctuid/general.el][general.el]] and [[https://github.com/justbur/emacs-which-key][which-key]]).
Users are encouraged to build their own setup.
* Installation
For example, via =straight=:
#+begin_src emacs-lisp
(straight-use-package
 '(lasgun :type git :host github :repo "aatmunbaxi/lasgun.el")
#+end_src

DOOM emacs, in =packages.el=:
#+begin_src emacs-lisp
(package! lasgun :recipe (:host github "aatmunbaxi/lasgun.el"))
#+end_src

If your package manager does not support git recipes, a simple =git clone= and placement of
#+begin_src emacs-lisp
  (add-to-list 'load-path "path/to/lasgun.el")
  (require 'lasgun)
#+end_src
in your =init.el= will do.
* Dependencies
- =avy=
- Optional:
  - =multiple-cursors= for =lasgun-make-multiple-cursors=
  - =embark= for =lasgun-embark-act-all=
* Customizing
By "lasgun mark" we mean a buffer position stored in =lasgun-mark-ring=.
- =lasgun-mark-ring-max=: Maximum number of lasgun marks
- =lasgun-pop-before-make-cursors=: Place =multiple-cursors= cursors only at lasgun marks (can negate interactively, see =lasgun-make-multiple-cursors= docstring)
- =lasgun-also-push-mark-ring=: Also push lasgun marks to buffer-local =mark-ring=
- =lasgun-use-lasgun-mark-overlay=: Use visual overlays for lasgun marks
- =lasgun-persist-lasgun-mark-ring=: Persist =lasgun-mark-ring= after performing action (Can override when defining lasgun actions, see =define-lasgun-action= docstring.)
- =lasgun-persist-negation-prefix-arg=: Prefix arg with which to negate =lasgun-persist-lasgun-mark-ring= behavior

- =lasgun-mark-face=: Face used to visually indicated lasgun marks
* =lasgun-mark= functions
Lasgun provides an analogue to nearly every =avy-goto= function that marks position of selection. They are listed below. Like with =avy=, it is quite an overwhelming number of options; they are provided for completeness. It is recommended that the user stick to a few staples, unless they are using a method to help remember where each function is bound, like =hercules= or =hydra=.

- =lasgun-mark-end-of-line=
- =lasgun-mark-line=
- =lasgun-mark-word=
- =lasgun-mark-char-2=
- =lasgun-mark-symbol-1=
- =lasgun-mark-subword-0=
- =lasgun-mark-subword-1=
- =lasgun-mark-char-timer=
- =lasgun-mark-char-2-above=
- =lasgun-mark-char-2-below=
- =lasgun-mark-word-0-above=
- =lasgun-mark-word-0-below=
- =lasgun-mark-symbol-1-above=
- =lasgun-mark-symbol-1-below=
- =lasgun-mark-whitespace-end=
- =lasgun-mark-whitespace-end-above=
- =lasgun-mark-whitespace-end-below=
